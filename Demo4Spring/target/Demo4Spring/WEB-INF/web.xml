<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>Demo4Spring Web Application</display-name>

    <servlet>
        <servlet-name>mvc-dispatcher</servlet-name>
        <!--定义 Servlet 的名字-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--指定实现这个 Servlet 的类-->
        <load-on-startup>1</load-on-startup>
        <!--指定当 Web 应用启动时，装载 Servlet 的次序。 当这个值为 正数或0，Servlet 容器先加载数值小的 Servlet ，再依次加载其他数值大的 Servlet. 如果这个值为负数或者没有设定，那么 Servlet 容器将在 Web 客户首次访问这个 Servlet 时加载它。-->
    </servlet>

    <servlet-mapping>
        <!--<servlet-mapping> 元素用来 指定 <servlet-name> 和 <url-pattern> 映射。-->
        <servlet-name>mvc-dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
        <!--<url-pattern> 是指访问 Servlet 的相对 URL 路径。  根据该属性，访问 mvc-dispatcher 的 URL 为： http://localhost:8080/， mvc-dispatcher 接收到客户请求后，再把请求转发给相应的 .jsp 并生成页面。-->
    </servlet-mapping>

    <!--Spring 框架给我们提供过滤器 CharacterEncodingFilter
  这个过滤器就是针对于每次浏览器请求进行过滤的，然后再其之上添加了父类没有的功能即处理字符编码。
  其中encoding用来设置编码格式，forceEncoding 用来设置是否理会 request.getCharacterEncoding()方法，设置为 true 则强制覆盖之前的编码格式。-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>